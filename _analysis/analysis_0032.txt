# 프로젝트 분석: GitHub Pages 배포 문제 해결 (2차 시도)

## 문제 분석

### 1. 프로젝트 충돌 문제
- GitHub Pages에서 `younsanghoon.github.io/PalmReading/` 접속 시 "성격 분석 테스트" 프로젝트 내용이 표시됨
- 같은 GitHub 계정에서 호스팅되는 다른 프로젝트와 충돌 발생
- 기존 gh-pages 브랜치에 잘못된 프로젝트 내용이 포함됨

### 2. 배포 방식 문제
- GitHub Actions 워크플로우와 gh-pages 브랜치 배포 방식이 혼합되어 있음
- GitHub Pages 설정이 명확하지 않아 어떤 소스를 사용하여 배포할지 불분명함

### 3. 경로 설정 문제
- 일부 파일에서 base URL 경로가 일관되지 않게 설정됨
- 일부 파일에서는 `/PalmReading/` 경로를 사용하고, 일부 파일에서는 루트 경로(`/`)를 사용함
- 앱 정보(제목, 설명 등)가 "성격 분석 테스트" 프로젝트의 정보로 설정됨

## 해결 방법

### 1. GitHub Actions 워크플로우 개선
```yaml
# .github/workflows/static.yml
name: Deploy static content to Pages
on:
  push:
    branches: ["main"]
  workflow_dispatch:
# ... 중략 ...
jobs:
  deploy:
    # ... 중략 ...
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Set up Node
        uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: 'npm'
      - name: Install dependencies
        run: npm install
      - name: Build
        run: npm run build
      # ... 중략 ...
```

### 2. 앱 정보 및 경로 수정
- **index.html**: 메타데이터 및 경로 수정
```html
<meta name="description" content="손금 분석과 AI 동물상 테스트로 나의 성격과 운세를 알아보세요">
<meta name="apple-mobile-web-app-title" content="손금 테스트">
<link rel="manifest" href="/PalmReading/manifest.json">
<link rel="apple-touch-icon" href="/PalmReading/icon-192.png">
<link rel="stylesheet" href="/PalmReading/camera-capture.css">
<title>손금 테스트 - AI 손금 분석</title>
```

- **404.html**: 타이틀 수정
```html
<title>손금 테스트 - AI 손금 분석</title>
```

- **manifest.json**: 앱 정보 및 경로 수정
```json
{
  "name": "손금 테스트 - AI 손금 분석",
  "short_name": "손금 테스트",
  "description": "손금 분석과 AI 동물상 테스트로 나의 성격과 운세를 알아보세요",
  "start_url": "/PalmReading/",
  "icons": [
    {
      "src": "/PalmReading/icon-192.png",
      "sizes": "192x192",
      "type": "image/png",
      "purpose": "any maskable"
    }
  ],
  "shortcuts": [
    {
      "name": "손금 테스트",
      "url": "/PalmReading/palm-test"
    },
    {
      "name": "동물상 테스트",
      "url": "/PalmReading/animal-test"
    }
  ]
}
```

### 3. 배포 프로세스 개선
1. 새로운 브랜치(pages-fix)를 생성하여 변경사항 적용
2. Pull Request를 통해 main 브랜치에 변경사항 병합
3. GitHub Actions 워크플로우가 자동으로 실행되어 사이트 배포
4. GitHub 저장소 설정에서 Pages 소스를 "GitHub Actions"로 설정

## 기술적 고려사항

### 1. GitHub Pages 배포 방식
- **GitHub Actions 방식**:
  - CI/CD 파이프라인을 통한 자동화된 빌드 및 배포
  - 빌드 과정에서 환경 변수 및 설정 적용 가능
  - 복잡한 빌드 단계 지원
  - 소스 코드와 배포 결과물 분리

- **브랜치 기반 방식**:
  - 특정 브랜치(gh-pages 또는 main)의 내용을 그대로 배포
  - 간단하고 직관적인 방식
  - 빌드 결과물을 직접 제어 가능
  - 소스 코드와 배포 결과물이 혼합될 수 있음

### 2. 경로 설정 일관성
- 모든 정적 자원 경로에 `/PalmReading/` 접두사 추가
- 서비스 워커 등록 경로 수정
- 매니페스트 파일의 시작 URL 및 아이콘 경로 수정
- SPA 라우팅 처리 시 base path 고려

### 3. 프로젝트 식별 정보
- 앱 이름, 설명, 아이콘 등을 PalmReading 프로젝트에 맞게 수정
- 메타데이터 및 타이틀 태그 수정
- 매니페스트 파일의 앱 정보 수정

## 향후 권장사항

### 1. 배포 자동화 개선
- GitHub Actions 워크플로우에 테스트 단계 추가
- 배포 후 자동 검증 단계 추가
- 환경별(개발/프로덕션) 설정 분리

### 2. 프로젝트 분리
- 동일 계정에서 여러 프로젝트를 호스팅할 경우 명확한 분리 필요
- 프로젝트별 전용 저장소 사용 고려
- 프로젝트별 고유 식별자 및 경로 사용

### 3. 모니터링 및 테스트
- 배포 후 모든 페이지 및 기능 테스트
- 다양한 기기 및 브라우저에서 테스트
- 성능 및 사용성 모니터링 