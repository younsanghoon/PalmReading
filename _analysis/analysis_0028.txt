# 프로젝트 분석: GitHub Pages 404 오류 해결

## 문제 분석

### 1. 오류 현상
- GitHub Pages URL(https://younsanghoon.github.io/)에 접속 시 404 오류 발생
- 오류 메시지: "There isn't a GitHub Pages site here."
- GitHub Status 정상 작동 중 확인

### 2. 원인 파악
- Vite 설정 파일(vite.config.ts)에서 base URL이 잘못 설정됨
- 기존 설정: `base: '/'` (루트 경로)
- GitHub Pages는 저장소 이름을 URL 경로로 사용하므로 `/PalmReading/` 경로가 필요함
- 이로 인해 정적 파일 경로가 잘못 생성되어 404 오류 발생

### 3. GitHub Pages 배포 구조
- GitHub Pages는 기본적으로 `username.github.io/repository-name` 형식의 URL 사용
- 프로젝트 저장소 이름이 'PalmReading'이므로 base URL은 `/PalmReading/`이어야 함
- GitHub Actions 워크플로우는 올바르게 설정되어 있었음 (.github/workflows/static.yml)

## 해결 방법

### 1. Vite 설정 수정
```typescript
// vite.config.ts
export default defineConfig({
  // ... 기존 설정 ...
  base: '/PalmReading/', // 수정된 부분
  // ... 기존 설정 ...
})
```

### 2. 배포 과정
- 변경사항을 커밋하고 main 브랜치에 푸시
- GitHub Actions 워크플로우가 자동으로 실행되어 빌드 및 배포
- 빌드 과정에서 모든 정적 자원 경로에 `/PalmReading/` prefix 추가됨

### 3. 검증 방법
- GitHub Actions 워크플로우 실행 완료 후 배포 상태 확인
- https://younsanghoon.github.io/PalmReading/ URL 접속하여 정상 작동 확인
- 정적 자원(JavaScript, CSS, 이미지 등)이 올바른 경로로 로드되는지 확인

## 기술적 고려사항

### 1. Vite의 base URL 설정
- Vite에서 `base` 옵션은 빌드된 자산의 기본 경로를 설정
- 로컬 개발 환경에서는 `'/'`가 적합하지만, GitHub Pages 배포 시에는 저장소 이름을 포함해야 함
- 이 설정은 모든 정적 자원의 URL 앞에 접두사로 추가됨

### 2. GitHub Pages 배포 자동화
- GitHub Actions 워크플로우는 다음 단계로 구성됨:
  1. 코드 체크아웃
  2. Node.js 설정
  3. 의존성 설치
  4. 빌드 실행
  5. GitHub Pages 설정
  6. 빌드 결과물 업로드
  7. GitHub Pages 배포

### 3. 클라이언트 라우팅 고려사항
- SPA(Single Page Application)의 경우 클라이언트 라우팅도 base URL을 고려해야 함
- React Router 등의 라우팅 라이브러리에서도 basename 설정 필요
- 404 페이지 리다이렉션을 위한 설정도 필요할 수 있음

## 향후 권장사항

### 1. 환경별 설정 분리
- 개발 환경과 프로덕션 환경의 base URL을 환경 변수로 분리하는 것을 고려
```typescript
base: process.env.NODE_ENV === 'production' ? '/PalmReading/' : '/',
```

### 2. 배포 전 테스트
- 배포 전 로컬에서 프로덕션 빌드를 테스트하여 경로 문제 사전 확인
- `npm run build` 후 로컬 서버로 빌드 결과물 테스트

### 3. 모니터링 설정
- GitHub Actions 워크플로우 실행 결과 모니터링
- 배포 후 자동화된 테스트 추가 고려

### 4. 문서화
- README.md에 GitHub Pages 배포 관련 정보 추가
- 개발자를 위한 로컬 개발 및 배포 가이드 작성 