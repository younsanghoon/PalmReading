# PalmReading 프로젝트 분석 - GitHub Pages 배포 설정

## GitHub Pages 배포 옵션 분석

### 제공된 워크플로우 옵션
1. **GitHub Pages Jekyll**
   - Jekyll 사이트 패키징 및 배포
   - 정적 사이트 생성기 기반
   - 마크다운 문서에 적합
   - 의존성 사전 설치됨

2. **Static HTML**
   - 정적 파일 직접 배포
   - 빌드 과정 없음
   - React, Vue 등 SPA에 적합
   - 사용자 지정 빌드 스크립트 추가 가능

### PalmReading 프로젝트에 적합한 옵션
- **Static HTML** 워크플로우 선택 권장
  - 이유: React/TypeScript 기반 SPA 프로젝트
  - 이미 Vite로 빌드된 정적 파일 배포에 적합
  - 사용자 지정 빌드 스크립트 추가 가능

## 워크플로우 설정 방법

### 기본 워크플로우 구성
1. `.github/workflows/static.yml` 파일 생성
2. 기본 구성:
   - Node.js 환경 설정
   - 의존성 설치
   - 프로젝트 빌드
   - 빌드 결과물 배포

### 권장 워크플로우 예시
```yaml
# Simple workflow for deploying static content to GitHub Pages
name: Deploy static content to Pages

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["main"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Single deploy job since we're just deploying
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Set up Node
        uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: 'npm'
      - name: Install dependencies
        run: npm install
      - name: Build
        run: npm run build
      - name: Setup Pages
        uses: actions/configure-pages@v3
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v2
        with:
          # Upload dist repository
          path: './dist'
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v2
```

## 주의사항 및 최적화 포인트

### 빌드 경로 설정
- `path: './dist'`: Vite 빌드 결과물 경로 확인 필요

### base 경로 설정
- `vite.config.ts` 파일에서 base 경로가 `/PalmReading/`로 설정되어 있는지 확인
- GitHub Pages의 기본 URL 구조에 맞게 설정 필요

### 배포 후 확인사항
- 사이트 접근 가능 여부: `https://younsanghoon.github.io/PalmReading/`
- 라우팅 정상 작동 여부
- 정적 자원(이미지, CSS 등) 로드 여부
- PWA 기능 정상 작동 여부

## 다음 단계
1. Static HTML 워크플로우 설정
2. 워크플로우 실행 및 배포 확인
3. 배포된 사이트 기능 테스트 