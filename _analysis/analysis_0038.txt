# GitHub Pages 배포 환경에서의 모델 경로 문제 분석

## 문제 상황
GitHub Pages를 통해 `https://younsanghoon.github.io/PalmReading/` 주소로 웹사이트를 배포한 후, 동물상 테스트 페이지에서 AI 모델이 로드되지 않는 문제가 발생했습니다. 사용자가 동물상 테스트 페이지에 접속했을 때 빈 화면만 표시되는 현상이 관찰되었습니다.

## 원인 분석

### 1. 모델 파일 경로 불일치
- **상대 경로 문제**: 모델 파일 경로가 `/attached_assets/model.json`으로 설정되어 있었으나, GitHub Pages에서는 기본 경로가 `/PalmReading/`이므로 실제 접근 경로는 `/PalmReading/attached_assets/model.json`이 되어야 합니다.

- **파일명 불일치**: 코드에서는 `model.json`과 `metadata.json`으로 참조하고 있었지만, 실제 파일명은 `model_1752161703239.json`과 `metadata_1752161703239.json`이었습니다.

### 2. 리소스 로드 경로 문제
- **카메라 스크립트 경로**: 카메라 기능을 위한 CSS와 JS 파일 경로도 GitHub Pages 배포 환경에 맞게 수정이 필요했습니다.
  - `/camera-capture.css` → `/PalmReading/camera-capture.css`
  - `/camera-capture.js` → `/PalmReading/camera-capture.js`

### 3. 관련 코드 분석
- **animal-face-test.tsx**: 동물상 테스트 컴포넌트에서 모델 URL을 정의하는 부분
  ```typescript
  const modelURL = '/attached_assets/model.json';
  const metadataURL = '/attached_assets/metadata.json';
  ```

- **ai-models.ts**: AI 모델 로드 및 예측 함수에서 모델 URL을 사용하는 부분
  ```typescript
  const modelUrl = window.location.origin + '/attached_assets/model.json';
  ```

## 해결 방법

### 1. 모델 파일 경로 수정
- **animal-face-test.tsx**에서 모델 URL 수정:
  ```typescript
  const modelURL = '/PalmReading/attached_assets/model_1752161703239.json';
  const metadataURL = '/PalmReading/attached_assets/metadata_1752161703239.json';
  ```

- **ai-models.ts**에서 모델 URL 수정:
  ```typescript
  // 동물상 모델
  const modelUrl = window.location.origin + '/PalmReading/attached_assets/model_1752161703239.json';
  
  // 손금 예측 함수
  const modelURL = window.location.origin + '/PalmReading/attached_assets/model_1752161703239.json';
  const metadataURL = window.location.origin + '/PalmReading/attached_assets/metadata_1752161703239.json';
  ```

### 2. 카메라 스크립트 경로 수정
```typescript
// CSS 로드
const link = document.createElement('link');
link.rel = 'stylesheet';
link.href = '/PalmReading/camera-capture.css';
document.head.appendChild(link);

// JS 로드
const script = document.createElement('script');
script.id = 'camera-capture-script';
script.src = '/PalmReading/camera-capture.js';
script.async = true;
document.body.appendChild(script);
```

## 배포 환경 관련 고려사항

### 1. 기본 경로(Base Path) 설정
- **vite.config.ts**에서 이미 `base: '/PalmReading/'`으로 설정되어 있어 빌드된 정적 파일의 경로는 올바르게 처리됨
- 그러나 코드 내에서 직접 참조하는 경로는 수동으로 수정 필요

### 2. 동적 경로 처리 방법
향후 개선 방안으로 환경에 따라 자동으로 경로를 설정하는 방법을 고려할 수 있습니다:

```typescript
// 환경에 따른 기본 경로 설정
const basePath = import.meta.env.MODE === 'production' ? '/PalmReading/' : '/';

// 모델 URL 정의
const modelURL = `${basePath}attached_assets/model_1752161703239.json`;
const metadataURL = `${basePath}attached_assets/metadata_1752161703239.json`;
```

### 3. 모델 파일 관리 개선
- 모델 파일명에 타임스탬프 대신 의미 있는 이름 사용 고려 (예: `animal_model.json`, `palm_model.json`)
- 모델 파일 경로를 중앙에서 관리하는 설정 파일 도입 고려

## 교훈 및 향후 개선점

1. **배포 환경 테스트**: 로컬 개발 환경뿐만 아니라 실제 배포 환경에서도 테스트 필요
2. **경로 일관성**: 모든 리소스 경로를 일관되게 관리하는 방법 도입
3. **환경 변수 활용**: 개발/프로덕션 환경에 따라 자동으로 경로 설정
4. **오류 처리 강화**: 모델 로드 실패 시 사용자에게 명확한 피드백 제공
5. **모델 로드 상태 모니터링**: 모델 로드 상태를 UI에 반영하여 사용자 경험 개선 