개인 맞춤형 AI 기반 성격 진단 웹 애플리케이션 설계 보고서

I. 핵심 요약

본 웹 애플리케이션은 기존의 심리 검사(MBTI, 에겐-테토)와 혁신적인 AI 기반 분석(동물 표현, AI 손금)을 결합하여 사용자에게 독특한 자기 발견 경험을 제공합니다. 목표는 고도로 개인화되고 몰입감 있는 성격 통찰력을 제공하여 자기 이해를 증진하고 즐거움을 선사하는 것입니다.

이 애플리케이션은 HTML, CSS, JavaScript, jQuery, 그리고 Teachable Machine을 활용한 클라이언트 측 전용 아키텍처로 설계됩니다. Teachable Machine으로 훈련된 머신러닝 모델은 TensorFlow.js를 통해 브라우저에서 실행되며, 백엔드 없이도 모든 기능을 수행합니다. 이러한 접근 방식은 경량화와 유지보수성을 보장하며, 모든 데이터 처리가 클라이언트 측에서 이루어져 개인 정보 보호를 강화합니다.



II. 서론: 다면적 성격 웹 애플리케이션

프로젝트 목표 및 범위

이 프로젝트는 다양한 성격 진단을 제공하는 웹 애플리케이션 개발을 목표로 합니다. HTML과 CSS로 구조와 스타일을 구성하고, JavaScript와 jQuery로 상호작용성을 추가하며, Teachable Machine으로 AI 모델을 통합합니다. 범위는 프런트엔드 개발, AI/ML 통합, 사용자 경험 개선, 그리고 보안 및 개인 정보 보호에 중점을 둡니다.

목표 사용자 경험 및 참여

애플리케이션은 직관적이고 시각적으로 매력적인 인터페이스를 제공하며, CSS 애니메이션과 jQuery를 활용한 동적 피드백으로 사용자 참여를 높입니다. 이를 통해 자기 발견 과정이 즐겁고 기억에 남는 경험이 되도록 합니다.

성격 진단 개요





동물 표현 테스트: 사용자의 얼굴 이미지를 분석하여 성격을 사자, 수달, 골든 리트리버, 비버 등의 동물 유형에 매핑합니다.



MBTI 테스트: 간소화된 Myers-Briggs Type Indicator로, 설문을 통해 16가지 성격 유형 중 하나를 도출합니다.



에겐-테토 테스트: 10가지 질문을 통해 에겐 또는 테토 특성을 평가합니다.



AI 손금 테스트: 손바닥 이미지를 분석하여 성격 특성을 추론하며, 오락 목임을 강조합니다.



III. 핵심 기능 및 사용자 흐름 설계

사용자 온보딩 및 테스트 선택 워크플로





구현: HTML/CSS로 설계된 랜딩 페이지에서 각 테스트로 연결되는 버튼을 제공합니다.



상호작용: jQuery를 사용해 버튼 클릭 시 해당 테스트 섹션으로 부드럽게 이동합니다.

설문 기반 테스트 메커니즘 (MBTI, 에겐-테토)

질문 유형 및 적응형 로직





HTML 폼(라디오 버튼, 슬라이더 등)을 통해 사용자 응답을 수집합니다.



JavaScript로 이전 응답에 따라 질문을 동적으로 조정하는 적응형 로직을 구현합니다.

채점 방법론 및 결과 계산





MBTI: 응답을 기반으로 E/I, S/N, T/F, J/P 점수를 계산하여 성격 유형을 결정합니다.



에겐-테토: 점수 기반 시스템으로 에겐 또는 테토 특성을 식별합니다.



모든 계산은 JavaScript로 클라이언트 측에서 수행됩니다.

이미지 기반 테스트 메커니즘 (동물 표현, AI 손금)

보안 이미지 캡처 및 업로드 프로세스





사용자는 HTML <input type="file"> 또는 웹캠 API로 이미지를 업로드합니다.



JavaScript로 이미지를 브라우저 내에서 처리하며, 서버로 전송되지 않습니다.

실시간 AI 처리 피드백





이미지 분석 중 jQuery를 사용해 로딩 애니메이션을 표시합니다.

개인화되고 다양한 결과 제시

해석을 위한 내러티브 생성





JavaScript로 테스트 결과를 기반으로 설명적 내러티브를 생성합니다.



이미지 기반 테스트는 AI 예측을 성격 특성에 매핑합니다.

대화형 데이터 시각화





Chart.js를 활용해 결과(예: 레이더 차트, 막대 차트)를 시각화합니다.

사용자 프로필, 기록 및 공유 기능





클라이언트 측 특성상 영구 저장은 불가하며, 브라우저의 localStorage로 임시 저장합니다.



JavaScript로 소셜 미디어 공유 기능을 제공합니다.



IV. 기술 아키텍처 및 기술 스택

프런트엔드 아키텍처





HTML/CSS: 페이지 구조와 스타일링.



JavaScript/jQuery: 동적 콘텐츠와 사용자 상호작용 처리.



Teachable Machine + TensorFlow.js: AI 모델 실행.

클라이언트 측 이미지 전처리 및 최적화





JavaScript 라이브러리(pica)로 이미지 크기를 조정하고 최적화합니다.

AI/ML 통합





모델 훈련: Teachable Machine에서 이미지 분류 모델을 생성.



모델 배포: TensorFlow.js로 브라우저에서 실행.

데이터 관리





로컬 스토리지: 결과 임시 저장.



서버 측 저장소는 사용하지 않습니다.



V. AI/머신러닝 구현 세부 사항

동물 표현 테스트를 위한 AI





모델 훈련: Teachable Machine에서 얼굴 이미지를 동물 유형으로 분류하는 모델을 훈련합니다.



추론: TensorFlow.js로 브라우저에서 예측을 실행합니다.

손금 테스트를 위한 AI





모델 훈련: 손바닥 이미지를 분석해 성격 특성을 예측하는 모델을 Teachable Machine으로 생성합니다.



추론: 클라이언트 측에서 실행.

하이브리드 AI 접근 방식





Teachable Machine의 분류 결과에 JavaScript 규칙 기반 로직을 적용해 상세한 해석을 제공합니다.



VI. 사용자 경험 (UX) 및 사용자 인터페이스 (UI) 개선





UX 원칙: 사용자 중심 설계, CSS와 jQuery로 일관된 인터페이스 제공.



시각화: Chart.js로 대화형 차트 구현.



애니메이션: CSS 전환과 jQuery 효과로 사용자 경험 강화.



VII. 보안, 개인 정보 보호 및 윤리적 고려 사항





보안: XSS 방지를 위해 입력 검증을 강화합니다.



개인 정보 보호: 이미지가 저장/전송되지 않음을 명시하며, 모든 처리는 브라우저 내에서 수행됩니다.



윤리: AI 한계를 투명히 공개하고 오락 목적임을 강조합니다.



VIII. 성능 및 확장성 전략





프런트엔드 최적화: JavaScript 최적화, 지연 로딩, 모델 경량화.



백엔드 없음으로 확장성 문제 최소화.



IX. 결론 및 권장 다음 단계

핵심 권장 사항





HTML, CSS, JavaScript, jQuery, Teachable Machine으로 클라이언트 측 애플리케이션 개발.



AI 모델을 TensorFlow.js로 통합하여 이미지 기반 테스트 제공.



개인 정보 보호를 위해 모든 처리를 로컬에서 수행.

제안된 개발 로드맵





기본 구조: HTML/CSS/JS로 프레임워크 구축.



설문 테스트: MBTI와 에겐-테토 구현.



AI 테스트: Teachable Machine 모델 통합.



개선: 애니메이션과 시각화 추가.

이 접근 방식은 간단하면서도 강력한 사용자 경험을 제공하며, 지정된 기술로 목표를 달성합니다.